name: Docker CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nginx-app:latest
    
    - name: Deploy to GCP VM
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.GCP_VM_IP }}
        username: ${{ secrets.GCP_VM_USERNAME }}
        key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
        script: |
          # 기존 컨테이너 중지 및 제거
          docker stop nginx-app || true
          docker rm nginx-app || true
          
          # 최신 이미지 가져오기
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nginx-app:latest
          
          # VM에 환경 변수 파일 생성/업데이트
          sudo mkdir -p /opt/app
          sudo bash -c 'cat > /opt/app/.env << EOL
          DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          DATABASE_PORT=${{ secrets.DATABASE_PORT }}
          DATABASE_USER=${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          DATABASE_NAME=${{ secrets.DATABASE_NAME }}
          LOCAL=${{ secrets.LOCAL }}
          KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CALLBACK_URL=${{ secrets.KAKAO_CALLBACK_URL }}
          SITE_URL=${{ secrets.SITE_URL }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          OPENAI_URL=${{ secrets.OPENAI_URL }}
          LLM_MODEL=${{ secrets.LLM_MODEL }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          PORT=${{ secrets.PORT }}
          EOL'
          
          # 파일 권한 설정
          sudo chmod 600 /opt/app/.env
          
          # 도커 컨테이너에 환경 변수 파일을 루트 디렉토리에 마운트하여 실행
          docker run -d \
            --name nginx-app \
            -p 80:80 \
            -v /opt/app/.env:/.env:ro \
            --restart always \
            ${{ secrets.DOCKER_HUB_USERNAME }}/nginx-app:latest
            
          # 사용하지 않는 이미지 정리
          docker image prune -a -f